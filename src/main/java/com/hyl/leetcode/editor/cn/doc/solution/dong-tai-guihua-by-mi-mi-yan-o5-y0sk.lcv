1动态规划求解问题找初始值以及状态转换公式
2初始值dp[0]=1,dp[1]=1
3.状态转换关系式为dp[i]=max(dp[i],max(dp[j],j)*max(dp[i-j],i-j))
4返回dp[n]即为各段绳子的乘积最大值

* 

```
class Solution {
public:
	int cuttingRope(int n) {
		vector<int>dp(n + 1, 1);
		for (int i = 3;i <= n;i++) {
			for (int j = 1;j <= i / 2;j++) {
                /*
               第二个for循环内容可写为dp[i]=max(dp[i],max(dp[j],j)*max(dp[i-j],i-j))
                */
				int temp;
				if (dp[i - j] > i - j) {
					if (dp[j] > j) {
						temp = dp[j] * dp[i - j];
					}
					else temp = j * dp[i - j];
				}
				else {
					temp = j * (i - j);
				}
				dp[i] = max(dp[i], temp);
			}
		}
		return dp[n];
	}
};
```

