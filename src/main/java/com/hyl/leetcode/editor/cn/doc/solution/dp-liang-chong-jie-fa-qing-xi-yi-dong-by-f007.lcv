### 解题思路

完全背包解法

### 代码

* cpp

```cpp
class Solution {
public:
	//完全背包解法
	int climbStairs(int n) {
		//dp[j] 爬j层楼梯到达楼顶的方法
		vector<int> dp(n + 1, 0);
		dp[0] = 1;
		for (int i = 1; i <= n; i++) {//遍历背包
			for (int j = 1; j <= 2; j++) {//遍历物品
				//物品大小要小于背包容量
				if (j <= i)
					dp[i] += dp[i - j];
			}
		}

		return dp[n];
	}
};
```

### 解题思路

找递推公式
具体细节详见代码注释

### 代码

* cpp

```cpp
class Solution {
public:
    int climbStairs(int n) {
		//dp[j] 爬j层楼梯到达楼顶的方法
		if (n <= 2) return n;
		//vector<int> dp(n + 1, 0);
		int  dp[3]{};
		dp[1] = 1;
		dp[2] = 2;

		for (int i = 3; i <= n; i++) {
			//dp[i] = dp[i - 1] + dp[i - 2];
			int val = dp[1] + dp[2];
			dp[1] = dp[2];
			dp[2] = val;
		}

		return dp[2];
    }
};
```

