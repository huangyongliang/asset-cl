### 解题思路

1. 模拟过程推导dp[i] = dp[i - 1] + dp[i - 2]
2. 使用优化方法：dp[1]和dp[2]同时向前推进一位

### 代码

* cpp

```cpp
class Solution {
public:
	int climbStairs(int n) {
		//模拟过程推导
		std::vector<int> dp(n + 1);
		dp[1] = 1;
		dp[2] = 2;
		if (n < 2) return dp[n];
		for (int i = 2; i <= n; i++) {
			dp[i] = dp[i - 1] + dp[i - 2];
		}
		return dp[n];


		//优化方法
		if (n < 2) return dp[n];
		int dp[3];
		dp[1] = 1;
		dp[2] = 2;
		for (int i = 3; i <= n; i++) {
			//dp[1]和dp[2]同时向前推进一位
			int sum = dp[1] + dp[2];
			dp[1] = dp[2];
			dp[2] = sum;
		}
		return dp[2];
	}
};
```

